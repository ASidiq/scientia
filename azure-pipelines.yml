# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

stages:
  - stage: build
    displayName: 'master-branch-build'

    #build jobs
    jobs:
      - job: build
        pool:
          name: 'Scientia-Pool'
          
        variables:
          buildConfiguration: 'Release'
        steps:
        - task: NuGetToolInstaller@1
        - task: DotNetCoreCLI@2
          displayName: 'Restoring'
          inputs:
            command: 'restore'
            projects: 'ScientiaWebAPI/ScientiaWebAPI/ScientiaWebAPI.csproj'
            feedsToUse: 'select' 
        - task: DotNetCoreCLI@2
          displayName: 'Building'
          inputs:
            command: 'build'
            projects: 'ScientiaWebAPI/ScientiaWebAPI/ScientiaWebAPI.csproj'
            arguments: '--configuration $(BuildConfiguration)'
        - task: DotNetCoreCLI@2
          displayName: 'dotnet test'
          inputs:
            command: 'test'
            projects: 'ScientiaWebAPI/ScientiaTest/ScientiaTest.csproj'
            arguments: '--configuration $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=$(Build.SourcesDirectory)/TestResults/Coverage/'
            testRunTitle: 'Test-CI- CD'
        - task: PublishCodeCoverageResults@1
          displayName: 'Publish code coverage report'
          inputs:
            codeCoverageTool: 'Cobertura'
            summaryFileLocation: '$(Build.SourcesDirectory)/**/coverage.cobertura.xml'
        - task: DotNetCoreCLI@2
          inputs:
            command: 'publish'
            publishWebProjects: true
            projects: 'ScientiaWebAPI/ScientiaTest/ScientiaTest.csproj'
            arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'drop'
            publishLocation: 'Container'
  - stage: release
    displayName: 'deployment-release'
    #release job
    jobs: 
      - job: release
        pool:
              name: 'Scientia-Pool'
        steps:
        - task: DownloadBuildArtifacts@0
          inputs:
            buildType: 'current'
            downloadType: 'specific'
            itemPattern: '**/*.zip'
            downloadPath: '$(System.ArtifactsDirectory)'
        - task: AzureRmWebAppDeployment@4
          inputs:
            ConnectionType: 'AzureRM'
            azureSubscription: 'Avanade-Account-1'
            appType: 'apiApp'
            WebAppName: 'ScientiaAPI'
            packageForLinux: '$(System.DefaultWorkingDirectory)/'
      - job: 'frontend-Build'
        pool:
          name: 'Scientia-Pool'  
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '14.x'
          - task: Npm@1
            displayName: 'Installing dependencies'
            inputs:
              command: 'install'
              workingDir: './Scientia-Application/'
              customRegistry: 'useFeed'
              customFeed: '5a8fc142-4799-49e5-a9e8-12650631876f'
          - script: npm install -g @angular/cli
          - script: ng build --prod
            displayName: 'Building Angualr Project'


